# docker-compose.dev.yml
services:

  app_postgres:
    container_name: app_postgres
    image: postgres:16
    environment:
      POSTGRES_DB: base_dados
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      app_network:
        ipv4_address: 172.16.20.2

  api:
    container_name: app_dotnet
    build:
      context: ./dotnet
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./dotnet/app_dotnet:/app/app_dotnet # sincroniza sua pasta local com a pasta /app dentro do container, então qualquer arquivo que você criar estará acessível do host e do container.
      # - /app/app_dotnet/bin
      # - /app/app_dotnet/obj
    networks:
      app_network:
        ipv4_address: 172.16.20.3

    stdin_open: true  # mantém STDIN aberto para interação
    tty: true         # para terminal interativo
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION_STRING=Host=app_postgres;Port=5432;Database=base_dados;Username=usuario;Password=senha
    working_dir: /app/app_dotnet
    depends_on:
      - app_postgres

  web:
    container_name: app_angular
    build:
      context: ./angular
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./angular/app_angular:/app/app_angular         # Monta o código para hot reload
      - ./angular/app_angular/node_modules:/app/app_angular/node_modules # Mas cuidado: isso pode quebrar dependências nativas do Node que foram compiladas para Linux dentro do container, se você estiver no Windows/macOS.
    networks:
      app_network:
        ipv4_address: 172.16.20.4
    stdin_open: true
    tty: true
    working_dir: /app/app_angular/
    depends_on:
      - api
    # command: ["ng", "serve", "--host", "0.0.0.0", "--port", "4200", "--poll=2000"]
    command: bash -c "ng serve --host 0.0.0.0 --port 4200 --poll=2000 || echo 'Angular failed, container still running' && exec bash"

    


volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.20.0/24
